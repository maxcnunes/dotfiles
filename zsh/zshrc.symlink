# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="gitster"
# ZSH_THEME="pure"
# ZSH_THEME="max-pure"
ZSH_THEME="me"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git mix z git-open)


# User configuration

export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# Ensure it uses English for the terminal, even if the system is using a different language.
export LANG=en_US.UTF-8

# Enale terminal vi mode, so we can use vi commands to edit the current terminal input.
set -o vi

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

source ~/.dotfiles/script/helper.sh

# Load homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"

export GOPATH=$HOME/Development/go
export PATH=$PATH:$GOPATH/bin

# For bazel tool
export PATH=$PATH:$HOME/bin

# For python
PYTHON_BIN_PATH=/opt/homebrew/opt/python@3.11/libexec/bin
export PATH=$PATH:$PYTHON_BIN_PATH

source ~/Development/alias.sh

# Load NVM
export NVM_DIR="$HOME/.nvm"
NVM_ROOT=$(brew --prefix nvm)
[ -s "${NVM_ROOT}/nvm.sh" ] && . "${NVM_ROOT}/nvm.sh"  # This loads nvm
[ -s "${NVM_ROOT}/etc/bash_completion.d/nvm" ] && . "${NVM_ROOT}/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# http://superuser.com/questions/357355/how-can-i-get-controlleft-arrow-to-go-back-one-word-in-iterm2?answertab=votes#tab-top
bindkey -e
bindkey '^[[1;9C' forward-word
bindkey '^[[1;9D' backward-word

alias gplrnps="git pull -r origin $(current_branch) && git push origin $(current_branch)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export FZF_DEFAULT_OPTS='--height 40% --reverse'

export GEM_HOME=$HOME/.gem
export PATH=$GEM_HOME/bin:$PATH

# export LLVM_PROJECT=$HOME/Development/llvm-project
# export PATH=$LLVM_PROJECT/build/bin:$PATH


# # To use the bundled libc++ please add the following LDFLAGS:
LDFLAGS="-L/opt/homebrew/opt/llvm/lib/c++ -Wl,-rpath,/opt/homebrew/opt/llvm/lib/c++"

# llvm is keg-only, which means it was not symlinked into /opt/homebrew,
# because macOS already provides this software and installing another version in
# parallel can cause all kinds of trouble.

# If you need to have llvm first in your PATH, run:
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"

# For compilers to find llvm you may need to set:
export LDFLAGS="$LDFLAGS -L/opt/homebrew/opt/llvm/lib"
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"

export PATH=$(pyenv root)/shims:$PATH
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"
export CARGO_HOME=~/.config/cargo
export RUSTUP_HOME=~/.config/rustup
source "$CARGO_HOME/env"
