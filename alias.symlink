alias vim='mvim -v'
alias dc='docker-compose'
alias dcb='docker-compose build'
alias dcup='docker-compose up'
alias dcr='docker-compose run --service-ports --rm'
alias dcps='docker-compose ps'
alias dclogs='docker-compose logs'
alias gosrc='cd $GOPATH/src'
alias grep_exclude_node_modules='grep --exclude-dir="node_modules"'
alias tm="gtime --format='\n---\n\"%C\" took %e seconds with %P CPU usage\n---\n'"
alias new_uuid='uuidgen | tr "[:upper:]" "[:lower:]"'
alias brewup='brew update; brew upgrade; brew prune; brew cleanup; brew doctor'
alias gh='github'

# Git aliases and functions
unalias gcd 2>/dev/null
gcd() {
	if git branch | grep -q development; then
		gco development
	elif git branch | grep -q develop; then
		gco development
	else
		echo "Not found develop or development branch for this repo"
		exit 1
	fi
}
unalias grbd 2>/dev/null
grbd() {
	if git branch | grep -q development; then
		grb development
	elif git branch | grep -q develop; then
		grb develop
	else
		echo "Not found develop or development branch for this repo"
		exit 1
	fi
}

dcrun() {
	container_name=$1
	docker-compose run --rm --use-aliases --service-ports $container_name sh
}

pull_pr() {
	pr_num=$1
	git fetch origin refs/pull/$pr_num/head:pr/$pr_num
}

reload-alias() {
	if [ -f /vagrant/alias.sh ]; then
		source /vagrant/alias.sh
		echo "> alias reloaded"
	elif [ -f ~/Development/alias.sh ]; then
		source ~/Development/alias.sh
		echo "> alias reloaded"
	else
		echo "> alias NOT reloaded"
	fi
}

dcrm(){
	docker-compose stop $1
	docker-compose rm --force $1
}


# Mac
# --------------------------

finder-show-hidden-files() {
	defaults write com.apple.finder AppleShowAllFiles YES
}

finder-hide-hidden-files() {
	defaults write com.apple.finder AppleShowAllFiles NO
}

fix-bluetooth() {
	sudo kextunload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport
	sudo kextload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport
}

fix-cam() {
  sudo killall VDCAssistant
}

reset-dns-cache() {
	sudo killall -HUP mDNSResponder
}

vlc-torrent(){
	go-peerflix "$1" --vlc
}

## -> Load secret configurations
if [[ "$USER" == "core" ]]; then
	source /Users/maxcnunes/Dropbox/dotfiles-secret/alias.sh
else
	source ~/Dropbox/dotfiles-secret/alias.sh
fi

envup () {
	envfile=$1
	set -o allexport; source $envfile; set +o allexport
}

if type rg &> /dev/null; then
  export FZF_DEFAULT_COMMAND='rg --files'
  export FZF_DEFAULT_OPTS='-m --height 50% --border'
  # export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden'
fi
